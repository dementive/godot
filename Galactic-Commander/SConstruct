# GALACTIC COMMANDER - IMPORTANT NOTE:
# If this file is ever changes afterwards "bear -- scons platform=linux" (or whatever the build command is) has to be run in order to generate the compile_commands.json so clangd can find the godot-cpp includes.

#!/usr/bin/env python
import os
import sys

env = SConscript("godot-cpp/SConstruct")

# For reference:
# - CCFLAGS are compilation flags shared between C and C++
# - CFLAGS are for C-specific compilation flags
# - CXXFLAGS are for C++-specific compilation flags
# - CPPFLAGS are for pre-processor flags
# - CPPDEFINES are for pre-processor defines
# - LINKFLAGS are for linking flags

# Tell compiler where header files are
env.Append(CPPPATH=["src/", "src/space_gen"])

# Tell compiler where cpp files are
sources = Glob("src/*.cpp") + Glob("src/space_gen/*.cpp")

library = env.SharedLibrary(
    "demo/bin/lib-galactic-commander{}{}".format(env["suffix"], env["SHLIBSUFFIX"]),
    source=sources,
)

Default(library)
